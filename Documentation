# Cross-P (Px) — Modern Python Trading Platform

**Cross-P (Px)** is a full-featured, Python-based trading simulation platform. It provides real-time data for **stocks, cryptocurrencies, forex pairs, commodities, and indices** with multi-currency support, live portfolio tracking, and market news. Built with **Streamlit** for frontend, **FastAPI** for backend, and **SQLite/Redis** for storage and caching.

---

## Features

* **User Management:** Registration, login, secure password hashing (bcrypt), optional 2FA and email verification.
* **Dashboard:** Real-time market overview for multiple assets.
* **Trading Simulation:** Buy/sell orders with simulated execution and demo balances (default \$100,000 USD).
* **Portfolio Management:** Track holdings, calculate current value, gains/losses, export to CSV.
* **Watchlist:** Favorite assets with live price updates.
* **Live Prices:** WebSocket-based streaming updates for low-latency data.
* **Multi-Currency Support:** Convert portfolio and prices into USD, EUR, BTC, UGX, etc.
* **Interactive Charts:** Price history, candlesticks, and technical indicators via Plotly.
* **Market News:** Latest finance-related news via NewsAPI integration.
* **Security & Performance:** Input validation, error handling, Redis-based rate limiting, and granular permissions.
* **Light/Dark Mode:** Responsive and mobile-friendly design.

---

## Architecture & Project Structure

```
cross_p/
│
├── main.py                # Streamlit app + FastAPI backend endpoints
├── database.py            # SQLite database setup and queries
├── api_integrations.py    # Fetch market data, currency conversion, news
├── utils.py               # Security, formatting, calculations
├── requirements.txt       # All Python dependencies
├── README.md              # Project documentation
│
├── pages/                 # Streamlit pages
│   ├── dashboard.py
│   ├── portfolio.py
│   ├── trade.py
│   ├── watchlist.py
│   ├── news.py
│
├── tests/                 # Unit tests
│   ├── test_database.py
│   ├── test_api_integrations.py
│   ├── test_utils.py
```

---

## Setup Instructions

1. **Clone the repository**

```bash
git clone https://github.com/your-username/Cross-P-Px.git
cd Cross-P-Px
```

2. **Create a virtual environment**

```bash
python3 -m venv venv
source venv/bin/activate
```

3. **Upgrade pip & install dependencies**

```bash
pip install --upgrade pip setuptools wheel
pip install -r requirements.txt
```

4. **Set environment variables (optional)**

```bash
export NEWS_API_KEY="your_newsapi_key_here"
```

5. **Run the backend + frontend**

```bash
# Backend (FastAPI endpoints + WebSocket server)
uvicorn main:app --reload

# In another terminal, Streamlit frontend
streamlit run main.py
```

6. **Access the app**

* Streamlit UI: `http://localhost:8501`
* FastAPI endpoints: `http://localhost:8000`

---

## Usage Guide

* **Dashboard:** Monitor real-time prices, portfolio value, and market overview.
* **Trade:** Place simulated buy/sell orders.
* **Portfolio:** View holdings, calculate total value, and export CSV.
* **Watchlist:** Track favorite assets with live updates.
* **News:** Browse market news and filter by keywords.

---

## Testing

* Unit tests are located in the `tests/` folder.
* Run all tests:

```bash
pytest tests/
```

---

## Contribution Guidelines

1. Fork the repository.
2. Create a new branch:

```bash
git checkout -b feature/your-feature-name
```

3. Make changes, commit, and push:

```bash
git commit -m "Add your message"
git push origin feature/your-feature-name
```

4. Open a pull request for review.

---

## Future Enhancements

* Full 2FA & email verification workflow.
* Granular role-based permissions.
* CI/CD pipeline with automated testing & deployment.
* Extended support for more exchanges and forex pairs.

---

## License

This project is licensed under the **MIT License** — see `LICENSE` for details.
